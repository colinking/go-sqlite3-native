// Code generated by "stringer -type=Opcode"; DO NOT EDIT.

package vm

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[OpcodeInit-0]
	_ = x[OpcodeOpenRead-1]
	_ = x[OpcodeString8-2]
	_ = x[OpcodeCast-3]
	_ = x[OpcodeIsNull-4]
	_ = x[OpcodeSeekGE-5]
	_ = x[OpcodeIdxGT-6]
	_ = x[OpcodeDeferredSeek-7]
	_ = x[OpcodeColumn-8]
	_ = x[OpcodeResultRow-9]
	_ = x[OpcodeHalt-10]
	_ = x[OpcodeTransaction-11]
	_ = x[OpcodeGoto-12]
	_ = x[OpcodeNext-13]
	_ = x[OpcodeRewind-14]
}

const _Opcode_name = "OpcodeInitOpcodeOpenReadOpcodeString8OpcodeCastOpcodeIsNullOpcodeSeekGEOpcodeIdxGTOpcodeDeferredSeekOpcodeColumnOpcodeResultRowOpcodeHaltOpcodeTransactionOpcodeGotoOpcodeNextOpcodeRewind"

var _Opcode_index = [...]uint8{0, 10, 24, 37, 47, 59, 71, 82, 100, 112, 127, 137, 154, 164, 174, 186}

func (i Opcode) String() string {
	if i < 0 || i >= Opcode(len(_Opcode_index)-1) {
		return "Opcode(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Opcode_name[_Opcode_index[i]:_Opcode_index[i+1]]
}
